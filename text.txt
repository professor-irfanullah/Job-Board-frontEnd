<template>
  <nav class="bg-white shadow-lg sticky top-0 z-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <!-- Logo and main menu items -->
        <div class="flex items-center">
          <!-- Logo -->
          <router-link to="/" class="flex-shrink-0 flex items-center">
            <img
              class="h-8 w-auto"
              src="../../public/vite.svg"
              alt="Company Logo"
            />
            <span class="ml-2 text-xl font-bold text-gray-900">Company</span>
          </router-link>

          <!-- Desktop menu items -->
          <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
            <router-link
              v-for="item in navigation"
              :key="item.name"
              :to="item.path"
              class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium"
              :class="{ 'border-indigo-500 text-gray-900': item.current }"
            >
              {{ item.name }}
            </router-link>
          </div>
        </div>

        <!-- Right side items (search, profile, etc.) -->
        <div class="hidden sm:ml-6 sm:flex sm:items-center">
          <!-- Search button -->
          <button
            type="button"
            class="p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            <span class="sr-only">Search</span>
            <!-- <MagnifyingGlassIcon class="h-6 w-6" /> -->
            <f-a-c icon="magnifying-glass" />
          </button>

          <!-- Profile dropdown -->
          <div class="ml-3 relative">
            <div>
              <button
                @click="toggleProfileDropdown"
                type="button"
                class="bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                id="user-menu-button"
                aria-expanded="false"
                aria-haspopup="true"
              >
                <span class="sr-only">Open user menu</span>
                <img
                  class="h-8 w-8 rounded-full"
                  src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                  alt="User profile"
                />
              </button>
            </div>

            <!-- Profile dropdown panel -->
            <transition
              enter-active-class="transition ease-out duration-200"
              enter-from-class="transform opacity-0 scale-95"
              enter-to-class="transform opacity-100 scale-100"
              leave-active-class="transition ease-in duration-75"
              leave-from-class="transform opacity-100 scale-100"
              leave-to-class="transform opacity-0 scale-95"
            >
              <div
                v-show="isProfileDropdownOpen"
                class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none"
                role="menu"
                aria-orientation="vertical"
                aria-labelledby="user-menu-button"
                tabindex="-1"
              >
                <router-link
                  v-for="item in userNavigation"
                  :key="item.name"
                  :to="item.path"
                  class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                  role="menuitem"
                  tabindex="-1"
                >
                  {{ item.name }}
                </router-link>
              </div>
            </transition>
          </div>
        </div>

        <!-- Mobile menu button -->
        <div class="-mr-2 flex items-center sm:hidden">
          <button
            @click="toggleMobileMenu"
            type="button"
            class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500"
            aria-controls="mobile-menu"
            :aria-expanded="isMobileMenuOpen.toString()"
          >
            <span class="sr-only">Open main menu</span>
            <f-a-c icon="bars" v-if="!isMobileMenuOpen" class="block h-6 w-6" />
            <!-- <Bars3Icon v-if="!isMobileMenuOpen" class="block h-6 w-6" />
            <XMarkIcon v-else class="block h-6 w-6" /> -->
            <f-a-c icon="xmark" v-else class="block h-6 w-6" />
          </button>
        </div>
      </div>
    </div>

    <!-- Mobile menu -->
    <transition
      enter-active-class="transition ease-out duration-100"
      enter-from-class="transform opacity-0 scale-95"
      enter-to-class="transform opacity-100 scale-100"
      leave-active-class="transition ease-in duration-75"
      leave-from-class="transform opacity-100 scale-100"
      leave-to-class="transform opacity-0 scale-95"
    >
      <div v-show="isMobileMenuOpen" class="sm:hidden" id="mobile-menu">
        <div class="pt-2 pb-3 space-y-1">
          <router-link
            v-for="item in navigation"
            :key="item.name"
            :to="item.path"
            class="border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium"
            :class="{
              'bg-indigo-50 border-indigo-500 text-indigo-700': item.current,
            }"
          >
            {{ item.name }}
          </router-link>
        </div>
        <div class="pt-4 pb-3 border-t border-gray-200">
          <div class="flex items-center px-4">
            <div class="flex-shrink-0">
              <img
                class="h-10 w-10 rounded-full"
                src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
                alt="User profile"
              />
            </div>
            <div class="ml-3">
              <div class="text-base font-medium text-gray-800">John Doe</div>
              <div class="text-sm font-medium text-gray-500">
                john@example.com
              </div>
            </div>
          </div>
          <div class="mt-3 space-y-1">
            <router-link
              v-for="item in userNavigation"
              :key="item.name"
              :to="item.path"
              class="block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100"
            >
              {{ item.name }}
            </router-link>
          </div>
        </div>
      </div>
    </transition>
  </nav>
</template>

<script setup>
import { onMounted, onUnmounted, ref } from "vue";
// import {
//   MagnifyingGlassIcon,
//   Bars3Icon,
//   XMarkIcon,
// } from "@heroicons/vue/24/outline";

const navigation = [
  { name: "Home", path: "/", current: true },
  { name: "Products", path: "/", current: false },
  { name: "Services", path: "/", current: false },
  { name: "About", path: "/", current: false },
  { name: "Contact", path: "/", current: false },
];

const userNavigation = [
  { name: "Your Profile", path: "/" },
  { name: "Settings", path: "/" },
  { name: "Sign out", path: "/" },
];

const isMobileMenuOpen = ref(false);
const isProfileDropdownOpen = ref(false);

const toggleMobileMenu = () => {
  isMobileMenuOpen.value = !isMobileMenuOpen.value;
};

const toggleProfileDropdown = () => {
  isProfileDropdownOpen.value = !isProfileDropdownOpen.value;
};

// Close dropdowns when clicking outside
const handleClickOutside = (event) => {
  if (!event.target.closest(".relative")) {
    isProfileDropdownOpen.value = false;
  }
  if (
    !event.target.closest("#mobile-menu") &&
    !event.target.closest('button[aria-controls="mobile-menu"]')
  ) {
    isMobileMenuOpen.value = false;
  }
};

// Add event listener when component mounts
onMounted(() => {
  document.addEventListener("click", handleClickOutside);
});

// Clean up event listener when component unmounts
onUnmounted(() => {
  document.removeEventListener("click", handleClickOutside);
});
</script>

navbar

<template>
  <nav class="bg-white shadow-lg sticky top-0 z-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <!-- Logo and main menu items -->
        <div class="flex items-center">
          <!-- Logo -->
          <router-link to="/tempNav" class="flex-shrink-0 flex items-center">
            <img
              class="h-8 w-auto"
              src="../../public/vite.svg"
              alt="JobBoard Logo"
            />
            <span class="ml-2 text-xl font-bold text-gray-900">JobConnect</span>
          </router-link>

          <!-- Desktop menu items -->
          <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
            <router-link
              v-for="item in navigation"
              :key="item.name"
              :to="item.path"
              class="border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium"
              :class="{ 'border-indigo-500 text-gray-900': item.current }"
            >
              {{ item.name }}
            </router-link>
          </div>
        </div>

        <!-- Right side items (search, profile, etc.) -->
        <div class="hidden sm:ml-6 sm:flex sm:items-center">
          <!-- Post Job Button -->
          <router-link
            to="/post-job"
            class="mr-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            Post a Job
          </router-link>

          <!-- Notifications -->
          <button
            type="button"
            class="p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 relative"
          >
            <span class="sr-only">View notifications</span>
            <f-a-c icon="bell" class="h-6 w-6" />
            <span
              class="absolute top-0 right-0 block h-2 w-2 rounded-full bg-red-400 ring-2 ring-white"
            ></span>
          </button>

          <!-- Profile dropdown -->
          <div class="ml-3 relative">
            <div>
              <button
                @click="toggleProfileDropdown"
                type="button"
                class="bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                id="user-menu-button"
                aria-expanded="false"
                aria-haspopup="true"
              >
                <span class="sr-only">Open user menu</span>
                <img
                  class="h-8 w-8 rounded-full"
                  :src="
                    user.avatar ||
                    'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'
                  "
                  alt="User profile"
                />
              </button>
            </div>

            <!-- Profile dropdown panel -->
            <transition
              enter-active-class="transition ease-out duration-200"
              enter-from-class="transform opacity-0 scale-95"
              enter-to-class="transform opacity-100 scale-100"
              leave-active-class="transition ease-in duration-75"
              leave-from-class="transform opacity-100 scale-100"
              leave-to-class="transform opacity-0 scale-95"
            >
              <div
                v-show="isProfileDropdownOpen"
                class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none"
                role="menu"
                aria-orientation="vertical"
                aria-labelledby="user-menu-button"
                tabindex="1"
              >
                <div class="px-4 py-2 text-sm text-gray-700 border-b">
                  <div>Signed in as</div>
                  <div class="font-medium truncate">{{ user.email }}</div>
                </div>
                <router-link
                  v-for="item in userNavigation"
                  :key="item.name"
                  :to="item.path"
                  class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                  role="menuitem"
                  tabindex="-1"
                >
                  {{ item.name }}
                </router-link>
              </div>
            </transition>
          </div>
        </div>

        <!-- Mobile menu button -->
        <div class="-mr-2 flex items-center sm:hidden">
          <button
            @click="isMobileMenuOpen = !isMobileMenuOpen"
            type="button"
            class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500"
            aria-controls="mobile-menu"
            :aria-expanded="isMobileMenuOpen.toString()"
          >
            <span class="sr-only">Open main menu</span>
            <f-a-c icon="bars" v-if="!isMobileMenuOpen" class="block h-6 w-6" />
            <f-a-c icon="xmark" v-else class="block h-6 w-6" />
          </button>
        </div>
      </div>
    </div>

    <!-- Mobile menu -->
    <transition
      enter-active-class="transition ease-out duration-100"
      enter-from-class="transform opacity-0 scale-95"
      enter-to-class="transform opacity-100 scale-100"
      leave-active-class="transition ease-in duration-75"
      leave-from-class="transform opacity-100 scale-100"
      leave-to-class="transform opacity-0 scale-95"
    >
      <div v-show="isMobileMenuOpen" class="sm:hidden" id="mobile-menu">
        <div class="pt-2 pb-3 space-y-1">
          <router-link
            v-for="item in navigation"
            :key="item.name"
            :to="item.path"
            class="border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium"
            :class="{
              'bg-indigo-50 border-indigo-500 text-indigo-700': item.current,
            }"
          >
            {{ item.name }}
          </router-link>
        </div>
        <div class="pt-4 pb-3 border-t border-gray-200">
          <div class="flex items-center px-4">
            <div class="flex-shrink-0">
              <img
                class="h-10 w-10 rounded-full"
                :src="
                  user.avatar ||
                  'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'
                "
                alt="User profile"
              />
            </div>
            <div class="ml-3">
              <div class="text-base font-medium text-gray-800">
                {{ user.name }}
              </div>
              <div class="text-sm font-medium text-gray-500">
                {{ user.email }}
              </div>
            </div>
          </div>
          <div class="mt-3 space-y-1">
            <router-link
              to="/post-job"
              class="block w-full px-4 py-2 text-base font-medium text-center text-white bg-indigo-600 hover:bg-indigo-700 rounded-md"
            >
              Post a Job
            </router-link>
            <router-link
              v-for="item in userNavigation"
              :key="item.name"
              :to="item.path"
              class="block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100"
            >
              {{ item.name }}
            </router-link>
          </div>
        </div>
      </div>
    </transition>
  </nav>
</template>

<script setup>
import { onMounted, onUnmounted, ref } from "vue";

// Sample user data - replace with your actual user data
const user = ref({
  name: "John Doe",
  email: "john@example.com",
  avatar: "",
  role: "employer", // or 'job_seeker'
});

const navigation = [
  { name: "Home", path: "/", current: true },
  { name: "Find Jobs", path: "/jobs", current: false },
  { name: "Companies", path: "/companies", current: false },
  { name: "Career Resources", path: "/resources", current: false },
];

const userNavigation = [
  { name: "Dashboard", path: "/dashboard" },
  { name: "My Profile", path: "/profile" },
  { name: "Saved Jobs", path: "/saved-jobs" },
  { name: "Applications", path: "/applications" },
  { name: "Account Settings", path: "/settings" },
  { name: "Sign out", path: "/logout" },
];

// Add employer-specific items if user is an employer
if (user.value.role === "employer") {
  userNavigation.splice(
    2,
    0,
    { name: "My Jobs", path: "/employer/jobs" },
    { name: "Candidates", path: "/employer/candidates" }
  );
}

const isMobileMenuOpen = ref(false);
const isProfileDropdownOpen = ref(false);

const toggleProfileDropdown = () => {
  isProfileDropdownOpen.value = !isProfileDropdownOpen.value;
};

// Close dropdowns when clicking outside
const handleClickOutside = (event) => {
  if (!event.target.closest(".relative")) {
    isProfileDropdownOpen.value = false;
  }
  if (
    !event.target.closest("#mobile-menu") &&
    !event.target.closest('button[aria-controls="mobile-menu"]')
  ) {
    isMobileMenuOpen.value = false;
  }
};

// Add event listener when component mounts
onMounted(() => {
  document.addEventListener("click", handleClickOutside);
});

// Clean up event listener when component unmounts
onUnmounted(() => {
  document.removeEventListener("click", handleClickOutside);
});
</script>